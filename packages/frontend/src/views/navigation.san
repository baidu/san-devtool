<template>
    <div class="san-devtools-navigation">
        <div class="navigation-header">
            <san-button
                type="primary"
                s-if="sanVersion !== 'unknown version'"
                class="logo"
                href="https://github.com/baidu/san/releases/tag/{{sanVersion}}"
                target="_blank"
                style="background-color: rgba(0,0,0,0); border: 0px;height: 100%;display: flex;"
            >
                <san-avatar
                    shape="square"
                    size="{{40}}"
                    src="../icons/logo.svg"
                >
                </san-avatar>
                <span class="title">San</span>
                <span class="version">v{{sanVersion}}</span>
            </san-button>
        </div>
        <section class="main-tabs">
            <san-tabs
                defaultActiveKey="{{currentTab}}"
                activeKey="{=currentTab=}"
                tabs="{{tabs}}"
            >
            </san-tabs>
        </section>
        <div class="icon-group">
            <san-popover
                trigger="click"
                placement="bottomRight"
                overlayClassName="san-devtools-popup-content"
            >
                <san-checkboxgroup
                    defaultValue="{{defaultValue}}"
                    slot="content"
                    on-change="handleChange"
                    style="{{{width: '100%'}}}"
                >
                    <div class="navigation-checkbox-wrap" s-for="item in options">
                        <san-checkbox checked="{{item.checked}}" value="{{item.value}}">{{item.label}}</san-checkbox>
                    </div>
                    <div class="navigation-checkbox-wrap" on-click="handleClick">
                        <span class="theme">Dark Mode</span>
                        <san-switch on-change='onThemeChange' defaultChecked="{{theme === 'Dark Mode'}}" />
                    </div>
                </san-checkboxgroup>
                <span class="setting"></span>
            </san-popover>
            <san-tooltip placement="bottomRight">
                <span slot="title">
                    1: San-DevTools only support development san/san-native.<br/>
                    2: The EVENT and MESSAGE panel only support 3.9.4+ version of san.<br/>
                    3: The PROFILER panel only support 3.10.1+ version of san.<br/>
                    4: async dispatch detecting surported when your san-store's version is 2.0.3+. <br/>
                </span>
                <span
                    class="help-desc"
                ></span>
            </san-tooltip>
        </div>
    </div>
</template>

<script>
    import san, { DataTypes } from 'san';
    import Tabs from '@frontend/components/tabs/tabs.san';
    import { connectStore, store } from '@frontend/store/index';
    import {isChromePanel, setSettings, getSettings } from '@frontend/utils/index';
    import {versionCompare} from '@shared/utils/versionCompare';
    import { Grid, Icon, Avatar, AppBar, Button, Tooltip, Popover, Checkbox, Switch } from 'santd';

    const LIGHT_MODE = 'Light Mode';
    const DARK_MODE = 'Dark Mode';

    export default connectStore({
        sanVersion: 'sanVersion',
        bridge: 'bridge'
    })(
        {
            dataTypes: {
                sanVersion: DataTypes.string,
                currentTab: DataTypes.string,
                setting: DataTypes.bool,
                theme: DataTypes.string,
                defaultValue: DataTypes.array,
                options: DataTypes.array,
                tabs: DataTypes.arrayOf(DataTypes.objectOf(DataTypes.string))
            },
            components: {
                'san-col': Grid.Col,
                'san-row': Grid.Row,
                'san-avatar': Avatar,
                'san-button': Button,
                'san-icon': Icon,
                'san-tabs': Tabs,
                'san-tooltip': Tooltip,
                'san-popover': Popover,
                'san-checkboxgroup': Checkbox.Group,
                'san-checkbox': Checkbox,
                'san-switch': Switch
            },

            initData() {
                return {
                    theme: this.initTheme(),
                    defaultValue: [], // checkboxgroup 无法与 slot 的 checkbox 同步
                    options: [
                        { label: 'Readonly for component data.', value: 'Setting:component', checked: false },
                        { label: 'Readonly for store.', value: 'Setting:store', checked: false }
                    ],
                    setting: false,
                    tabs: [
                        {
                            label: 'Component',
                            icon: 'appstore',
                            value: 'component'
                        },
                        {
                            label: 'Store',
                            icon: 'store',
                            value: 'store'
                        },
                        {
                            label: 'History',
                            icon: 'history',
                            value: 'history'
                        },
                        {
                            label: 'Profiler',
                            icon: 'profiler',
                            value: 'profiler'
                        }
                    ],
                    currentTab: 'component'
                }
            },

            initTheme() {
                let theme = window.localStorage['_san_devtool_theme'];
                if (!theme) {
                    window.localStorage['_san_devtool_theme'] = LIGHT_MODE;
                    theme = LIGHT_MODE;
                }
                switch (theme) {
                    case LIGHT_MODE: {
                         document.body.classList.remove('san-devtools-dark');
                        break;
                    }
                    case DARK_MODE: {
                         document.body.classList.add('san-devtools-dark');
                        break;
                    }
                    default: break;
                }
                return theme;
            },

            onThemeChange(value) {
                if (value) {
                     document.body.classList.add('san-devtools-dark');
                    window.localStorage['_san_devtool_theme'] = DARK_MODE;
                } else {
                     document.body.classList.remove('san-devtools-dark');
                    window.localStorage['_san_devtool_theme'] = LIGHT_MODE;
                }
            },

            created() {
                this.watch('currentTab', currentTab => {
                    store.dispatch('setActiveTab', currentTab);
                });
                this.watch('sanVersion', sanVersion => {
                    if (versionCompare(sanVersion, '3.9.4') >= 0) {
                        this.data.splice(
                            'tabs',
                            [
                                3,
                                0,
                                {
                                    label: 'Event',
                                    icon: 'event',
                                    value: 'event'
                                },
                                {
                                    label: 'Message',
                                    icon: 'message',
                                    value: 'message'
                                }
                            ]
                        );
                        this.data.splice(
                            'options',
                            [
                                2,
                                0,
                                { label: 'Readonly for event.', value: 'Setting:event', checked: false },
                                { label: 'Readonly for messages.', value: 'Setting:messages', checked: false }
                            ]
                        );
                    }
                    this.initOptions()
                });
            },

            initOptions() {
                if (isChromePanel) {
                    chrome.runtime.sendMessage(
                        {
                            event: 'Setting.get'
                        },
                        this.updateSetting.bind(this)
                    );
                } else {
                    let localStorage = window.localStorage;
                    this.updateSetting(localStorage['settingData']);
                }
            },

            updateSetting(res) {
                let settings = getSettings(res);
                this.data.set('defaultValue', settings);
                let options = this.data.get('options');
                let newOptions = options.map(item => {
                    if (settings.indexOf(item.value) > -1) {
                        return Object.assign({}, item, { checked: true });
                    }
                    return item;
                });
                this.data.set('options', newOptions);
                store.dispatch('settings', res);
            },

            handleChange(checkedValues) {
                let settingData = setSettings(checkedValues);
                let bridge = this.data.get('bridge');
                if (isChromePanel) {
                    chrome.runtime.sendMessage({
                        event: 'Setting.set',
                        settingData: settingData
                    });
                } else {
                    localStorage['settingData'] = settingData;
                }
                store.dispatch('settings', settingData);
            }
        }
    );

</script>

<style lang="less">
    @import '@frontend/views/style/variables.less';
    .san-devtools-navigation {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: @nav-bg-color;
        .navigation-header {
            height: @nav-height;
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
            font-size: 18px;
            .santd-btn-primary:hover {
                background: transparent !important;
            }
            .logo {
                padding: 0;
                > span {
                    display: inline-flex;
                }
                .title {
                    padding-left: 20px;
                    font-size: 24px;
                    line-height: 20px;
                    color: @nav-font-color;
                    align-self: center;
                }
                .version {
                    padding-left: 8px;
                    font-size: 12px;
                    color: @nav-version-font-color;
                    text-align: left;
                    line-height: 12px;
                    align-self: center;
                    top: 3px;
                    position: relative;
                }
            }
        }
        .main-tabs {
            overflow: auto;
        }
        .icon-group {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            padding-right: 28px;
            .setting,
            .help-desc {
                box-sizing: content-box;
                background-repeat: no-repeat;
                background-size: cover;
                width: 20px;
                height: 20px;
                display: inline-block;
                border: 1px solid transparent;
            }
            .help-desc {
                background-image: url('../icons/help.svg');
                margin-left: 30px;
            }
            .setting {
                border-radius: 50%;
                cursor: pointer;
                background-image: url('../icons/setting.svg');
            }
            .setting:hover {
                background-color: @icon-hover-bg-color;
                border: 1px solid @icon-hover-border-color;
            }
        }
    }
    div .santd-popover-placement-bottomRight > .san-devtools-popup-content .santd-popover-arrow {
        right: 8px !important;
    }
    .santd-popover {
        .san-devtools-popup-content {
            .santd-checkbox {
                top: 0;
            }
            .santd-popover-inner-content {
                padding: 0 0;
            }
            .navigation-checkbox-wrap {
                display: flex;
                justify-content: space-between;
                align-items: center;
                .santd-switch-checked {
                    background-color: #236eff;
                }
                .santd-switch {
                    min-width: auto;
                }
                .theme {
                    color: @setting-font-color;
                    padding-left: 20px;
                }
                padding: 12px 16px;
                &:hover {
                    background-color: @setting-hover-bg-color;
                }
                &:first-child {
                    border-top-left-radius: 9px;
                    border-top-right-radius: 9px;
                }
                &:last-child {
                    border-bottom-right-radius: 9px;
                    border-bottom-left-radius: 9px;
                }
                .santd-checkbox-checked .santd-checkbox-inner {
                    background-color: @setting-checkbox-bg-color;
                    border: 1px solid @setting-checkbox-border-color;
                }
                .santd-checkbox-wrapper {
                    color: @setting-font-color;
                    .santd-checkbox-inner {
                        border-radius: 50%;
                        width: 9px;
                        height: 9px;
                    }
                    .santd-checkbox-inner::after {
                        display: none;
                    }
                }
            }
            .santd-popover-arrow {
                border-top-color: @setting-bg-color !important;
                border-left-color: @setting-bg-color !important;
            }
            .navigation-checkbox-wrap:not(:first-child) {
                border-top: 1px solid @setting-border-top-color;
            }
            .santd-popover-inner {
                border-radius: 9px;
                background: @setting-bg-color;
                box-shadow: 0 2px 8px 0 @setting-shadow-color;
            }
        }
    }

    .san-devtools-dark {
        .san-devtools-navigation {
            background-color: @dark-nav-bg-color;
            .navigation-header {
                .logo {
                    .title {
                        color: @dark-nav-font-color;
                    }
                    .version {
                        color: @dark-nav-version-font-color;
                    }
                }
            }
            .icon-group {
                .setting:hover {
                    background-color: @dark-icon-hover-bg-color;
                    border: 1px solid @dark-icon-hover-border-color;
                }
            }
        }
        .santd-popover {
            .san-devtools-popup-content {
                .navigation-checkbox-wrap {
                    .theme {
                        color: @dark-setting-font-color;
                    }
                    &:hover {
                        background-color: @dark-setting-hover-bg-color;
                    }
                    .santd-checkbox-checked .santd-checkbox-inner {
                        background-color: @dark-setting-checkbox-bg-color;
                        border: 1px solid @dark-setting-checkbox-border-color;
                    }
                    .santd-checkbox-wrapper {
                        color: @dark-setting-font-color;
                    }
                }
                .santd-popover-arrow {
                    border-top-color: @dark-setting-bg-color !important;
                    border-left-color: @dark-setting-bg-color !important;
                }
                .navigation-checkbox-wrap:not(:first-child) {
                    border-top: 1px solid @dark-setting-border-top-color;
                }
                .santd-popover-inner {
                    background: @dark-setting-bg-color;
                    box-shadow: 0 2px 8px 0 @dark-setting-shadow-color;
                }
            }
        }
    }
</style>
