<template>
    <san-json-tree-view
        alwaysShowRoot="{{!0}}"
        data="{=data=}"
        filterText="{=filterText=}"
        rootName="data"
        readonly="{{readonly}}"
        on-change="change($event)"
        on-append="append($event)"
        on-rename="rename($event)"
        on-delete="delete($event)"
    >
    </san-json-tree-view>
</template>

<script>
    import san, { DataTypes } from 'san';
    import {COMPONENT_MODIFY_DATA} from '@shared/protocol';
    import JSONView from 'json-tree-view';
    import 'json-tree-view/devtools.css';

    import { connectStore } from '@frontend/store/index';
    import JsonTreeView from '@frontend/components/misc/jsonTreeView.san';

    export default connectStore({
        bridge: 'bridge',
        readonly: 'settings.componentReadOnly'
    })(
        {
            dataTypes: {
                /* props */
                data: DataTypes.object,
                selectedComponentId: DataTypes.string,
                dataReadonly: DataTypes.bool,
                filterText: DataTypes.string,
                readonly: DataTypes.bool,
                bridge: DataTypes.object
            },
            
            components: {
                'san-json-tree-view': JsonTreeView
            },

            setData(id, path, oldVal, newVal, type) {
                let message = {
                    id,
                    type,
                    path,
                    oldVal,
                    newVal
                }
                this.data.get('bridge').send(COMPONENT_MODIFY_DATA, message);
            },

            change({ path, oldVal, newVal }) {
                if (oldVal === newVal) {
                    return;
                }
                this.setData(this.data.get('selectedComponentId'), path, oldVal, newVal, 'change');
            },

            append({ path, oldVal, newVal }) {
                this.setData(this.data.get('selectedComponentId'), path, oldVal, newVal, 'append');
            },

            rename({ path, oldVal, newVal }) {
                this.setData(this.data.get('selectedComponentId'), path, oldVal, newVal, 'rename');
            },

            delete({ path, oldVal, newVal }) {
                this.setData(this.data.get('selectedComponentId'), path, oldVal, newVal, 'delete');
            }
        }
    )
</script>

<style lang="less">
</style>
